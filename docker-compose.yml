version: "3.9"
services:
  database:
    image: postgres:16.0-alpine3.18
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
    ports:
      - "5432:5432"
    restart:
      always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bd-net

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
    networks:
      - mongo-net

#  mongo-express:
#    image: mongo-express
#    ports:
#      - "8081:8081"
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: exampl
#      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
#      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#    networks:
#      - mongo-net

  app:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    env_file:
      - ./gateway/.env
    ports:
      - "8000:8000"
    volumes:
      - ./gateway/src:/app/src
    networks:
      - gateway-net
      - auth-net

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    env_file:
      - ./auth/.env
    ports:
      - "8001:8001"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./auth/migrations:/app/migrations
      - ./auth/src:/app/src
    networks:
      - gateway-net
      - auth-net
      - bd-net

  url-shorter:
    build:
      context: ./url-shorter
      dockerfile: Dockerfile
    env_file:
      - ./url-shorter/.env
    ports:
      - "8002:8002"
    volumes:
      - ./url-shorter/src:/app/src
    networks:
      - gateway-net
      - mongo-net
      - auth-net

  nginx:
    image: nginx:1.25.3-alpine3.18
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    restart:
      always
    depends_on:
      - app
    networks:
      - gateway-net

  rabbitmq:
    image: rabbitmq:3.13.1-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 15672:15672

volumes:
  postgres_data:
  mongodb_data:
  rabbitmq_data:

networks:
  gateway-net:
    driver: bridge
  bd-net:
    driver: bridge
  mongo-net:
    driver: bridge
  auth-net:
    driver: bridge